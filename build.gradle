plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation (
            "com.codeborne:selenide:6.19.1",
            "org.junit.jupiter:junit-jupiter:5.9.3",
            "org.slf4j:slf4j-simple:2.0.6",
            "org.assertj:assertj-core:3.23.1",
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.7.1',
            'com.google.code.gson:gson:2.10',
            'com.github.javafaker:javafaker:0.12',
            'io.qameta.allure:allure-selenide:2.19.0',
            'org.seleniumhq.selenium:selenium-java:3.141.59',
            'io.github.bonigarcia:webdrivermanager:5.5.3',
            'org.aeonbits.owner:owner:1.0.4',
            'io.rest-assured:rest-assured:5.3.0'
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    systemProperty "chromeoptions.prefs", "intl.accept_languages=ru"
    systemProperties(System.getProperties())
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task files_test(type: Test) {
    useJUnitPlatform {
        includeTags("files")
    }
}

task remote_test(type: Test) {
    useJUnitPlatform {
        includeTags("remote")
    }
}

task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}

task web_driver_test(type: Test) {
    systemProperties(System.getProperties()) //запуск тестов из терминала с параметрами
    useJUnitPlatform {
        includeTags("web_driver")
    }
}
